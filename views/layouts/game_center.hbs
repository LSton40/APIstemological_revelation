<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Jegs and Pokers GAME CENTER HANDLE</title>
  <link href="https://fonts.googleapis.com/css2?family=Mouse+Memoirs&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="front/css/style.css">
</head>
<div id="current-games"></div>

{{{body}}}

<div id="mmmToast"></div>
<script src="/socket.io/socket.io.js"></script>
<script>
  

  /* calling in the username that was passed in view_routes */
  let username = "{{username}}";
  let userColor = "0xF78DA7";
  /* maybe let user pick their or theme?  NTH VERYLOW PRIORITY */

  /* setting query to pass to the socket */
  let query = {
    username: username,
    userColor: userColor
  }


  /* joining the lobby room && carrying over the username & color */
  const socket = io('/lobby', { query: query });


  socket.on('current games', (gameList) => {
    console.log(gameList);


    var currentGames = document.getElementById('current-games');

    gameList.forEach(game => {

      let gameDiv = document.createElement('div');
      let playerCount = document.createElement('h2');
      playerCount.innerText = game.players;
      let gameStatus = game.gameStatus;

      gameDiv.appendChild(playerCount);
      gameDiv.appendChild(gameStatus);
      currentGames.appendChild(gameDiv);

    });

    socket.on('errors', (err) => {
      console.log(`There was an error: ${err.error}`);

      toastEl = document.getElementById('mmmToast');
      toastEl.innerText = `${err.error} :(`;
      toastEl.className = 'show';
      setTimeout(() => { toastEl.className = toastEl.className.replace("show", ""); }, 3000);
    })
    
  });

  


  //socket.on('redirect', function (destination) {

  //const gameIdSize = 6;
  //let gameid = '';

  // for (let i = 0; i < gameIdSize; i++) {
  //  gameid += Math.floor(Math.random() * 10);
  // };
  // socket.emit('createGame', gameid);
  // window.location.href = destination;
  //});

  //socket.on('errors', (error) => {
  /* append the errors somewhere!! TOAST??!?!?!?! */

  //socket.on('redirect', (url) => {

  //fetch(url);

  //});

  // const myCookie = await cookieStore.get('connect.sid');
  // console.log(`MY COOKIE STORE----> ${cookieStore.get('connect')}`);
  // socket.emit('cookie time', username);




  /* ********************************** */
  /* GUNGUNTESTING REMOVE ON DEPLOYMENT */
  /* ********************************** */
  /*
  const queryGameSocket = async () => {
    let name = {
    username: 'bobbyfillets',
    userColor: "0xF78DA7"
  }
        let joinGameFormEl = document.getElementById('joinForm');
    let joinGameInput = document.getElementById('roomCode');

    joinGameFormEl.addEventListener('submit', async (e) => {
      console.log(`IM STILL HERE ${socket.id}`);
      console.log('clicked')
      e.preventDefault();
      if (joinGameInput.value) {
        console.log(`sending request to join ${joinGameInput.value}`)
        socket.emit('joinRequest', socket.id);
        console.log('clicked')

      }
      joinGameInput.value = '';
    });


    console.log('queried boii');
  }

  socket.on('enoughLength', (data) => {
    console.log(data);
  })

  queryGameButtonEl = document.getElementById('queryGame');
  queryGameButtonEl.addEventListener('click', queryGameSocket);
  */
  /* ********************************** */
  /* GUNGUNTESTING REMOVE ON DEPLOYMENT */
  /* ********************************** */

  
    socket.on('currentPlayers', (players) => {
      console.log('currplaycalled');
      playerHolderEl = document.getElementById('currentPlayers');

      for (let i = 0; i < players.length; i++) {
        playerHolderEl.insertAdjacentHTML('beforeend', `
        <div class="cards">
          <h3>${players[i].username}</h3>
        </div>
        `);
      }
    });



  





 

    function createGame() {
    console.log(query);
    socket.emit('createGame', query);

    window.location.assign("/lobby");
  }


  function joinGame() {
    let joinGameInput = document.getElementById('roomCode').value;



    console.log(joinGameInput);

    if (joinGameInput) {
      console.log(`sending request to join ${joinGameInput}`)
      socket.emit('joinRequest', query, joinGameInput);
      window.location.assign("/lobby");
    }
    joinGameInput = '';

  }




    {{!-- let joinGameFormEl = document.getElementById('joinForm');
    let joinGameInput = document.getElementById('roomCode');

    joinGameFormEl.addEventListener('submit', async (e) => {
      console.log(`IM STILL HERE ${socket.id}`);
      console.log('clicked')
      e.preventDefault();
      if (joinGameInput.value) {
        console.log(`sending request to join ${joinGameInput.value}`)
        socket.emit('joinRequest', socket.id);
        console.log('clicked')

      }
      joinGameInput.value = '';
    }); --}}







  


  {{!-- socket.on('joinRequestReturn', (ans) => {
    //maybe add /lobby:gameid
    window.location.assign("/lobby")

  }); --}}


  function startGame() {
    console.log('pressedButton');
    console.log(`STARTING GAME: PREPARE!`);
    socket.emit('startGame', socket.id);
    window.location.assign("/gameboard");
  }

  



</script>
{{!-- <script src="../front/js/play.js"></script>
<script src="../front/js/front.js"></script> --}}